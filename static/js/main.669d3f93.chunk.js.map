{"version":3,"sources":["config/constants/farms.ts","hooks/useRefresh.ts","utils/getRpcUrl.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","state/hooks.ts","hooks/useToast.ts","hooks/useAuth.ts","utils/collectibles.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","config/constants/tokens.ts","utils/bigNumber.ts","utils/compoundApyHelpers.ts","utils/achievements.ts","state/predictions/index.ts","views/Pools/helpers.tsx","config/constants/meta.ts","components/layout/Page.tsx","hooks/useTheme.ts","components/layout/Container.tsx","utils/apr.ts","components/PageLoader.tsx","utils/wallet.ts","config/constants/types.ts","utils/farmHelpers.ts","utils/multicall.ts","utils/settings.ts","utils/contractHelpers.ts","utils/formatBalance.ts","state/index.ts","config/index.ts","state/types.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","utils/web3.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/useEagerConnect.ts","views/Farms/Redirects.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","App.tsx","Providers.tsx","index.tsx","state/teams/index.tsx","config/constants/nfts.ts","config/constants/endpoints.ts","state/actions.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts"],"names":["farms","pid","lpSymbol","lpAddresses","97","56","stakingAddresses","token","tokens","srkb","pairToken","wbnb","quoteToken","own","kgo","kclp","busd","sfuel","isPromoted","liquidityUrl","PANCAKE_ADD_LIQUIDITY_URL","infoURL","CAKE_INFO_URL","tipsy","gzila","flash","bhc","hps","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","nodes","process","getNodeUrl","randomIndex","random","length","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","teams","id","name","description","images","lg","md","sm","alt","ipfs","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","a","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","find","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","calls","i","push","address","getPancakeProfileAddress","params","multicallv2","profileABI","teamData","onChainTeamData","index","toNumber","getAddress","MAINNET_CHAIN_ID","getCakeAddress","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","transformUserData","userData","allowance","BigNumber","BIG_ZERO","stakingTokenBalance","stakedBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","farm","quoteTokenAddress","toLocaleLowerCase","tokenAddress","busdPrice","campaigns","type","title","badge","campaignMap","Map","forEach","campaign","set","usePollFarmsData","includeArchive","dispatch","useAppDispatch","useWeb3React","account","useEffect","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","usePollBlockNumber","interval","setInterval","web3NoAccount","eth","getBlockNumber","blockNumber","setBlock","clearInterval","useFarms","useSelector","state","useFarmFromPid","data","f","useFarmUser","tokenBalance","earnings","useBusdPriceFromPid","useLpTokenPrice","symbol","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","times","tokenAmountTotal","totalLpTokens","getBalanceAmount","div","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","userDataLoaded","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","isInitialized","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","fetchAchievements","useAchievements","achievements","usePriceBnbBusd","bnbBusdFarm","usePriceCakeBusd","cakeBnbFarm","useBlock","block","useInitialBlock","initialBlock","useIsHistoryPaneOpen","predictions","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetRounds","rounds","useGetSortedRounds","roundData","orderBy","Object","values","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","status","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","bets","history","useGetBetByRoundId","roundId","useBetCanClaim","bet","getCanClaim","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","keys","fetchWalletNfts","tokenIds","nftsInWallet","Nfts","filter","nft","includes","identifier","useToast","toastContext","ToastsContext","undefined","Error","useAuth","t","useTranslation","activate","deactivate","toastError","login","useCallback","connectorID","connector","error","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","logout","profileClear","getItem","close","getIdentifierKeyFromAddress","nftAddress","nftSource","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","console","getNftByTokenId","ifos","blockSlice","createSlice","initialState","currentBlock","reducers","action","payload","actions","createAsyncThunk","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","Number","balanceOf","balanceOfResponse","nftDataFetchPromises","Promise","all","nftData","nftSourceData","flat","collectiblesSlice","extraReducers","builder","addCase","pending","fulfilled","association","getUserPointIncreaseEvents","request","GRAPH_API_PROFILE","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","some","CACHE_KEY","ThemeContext","React","createContext","isDark","toggleTheme","ThemeContextProvider","children","useState","isDarkUserSetting","JSON","parse","setIsDark","Provider","value","prevState","setItem","stringify","theme","dark","light","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","prev","decimals","projectLink","bnb","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","iconExtension","ttkb","kroot","bglg","BIG_ONE","BIG_NINE","BIG_TEN","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","key","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","pointCenterIfoABI","claimStatus","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","PredictionStatus","INITIAL","HistoryFilter","ALL","toJSON","fetchBet","getBet","response","transformBetResponse","fetchRoundBet","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","getBalanceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","getDecimalAmount","cakeAsDisplayBalance","getFullDisplayBalance","convertCakeToShares","amountInShares","dividedBy","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","Boolean","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","DEFAULT_META","image","StyledPage","styled","Container","mediaQueries","PageMeta","pageMeta","path","getCustomMeta","useLocation","pathname","property","content","Page","props","useTheme","StyledThemeContext","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmV2Apr","LPTokenPrice","rewardRate","EPOCH_PER_YEAR","getFarmApr","poolWeight","cakePriceUsd","poolLiquidityUsd","CAKE_PER_YEAR","Wrapper","PageLoader","ethereum","log","method","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","tokenSymbol","tokenDecimals","tokenImage","options","tokenAdded","PoolIds","PoolCategory","NftType","calculateUserRewardRate","totalDeposits","stakingToken","Token","ChainId","MAINNET","rewardsToken","rewardRateAmount","TokenAmount","stakedAmount","totalSupply","token0","token1","dummyPair","Pair","totalStakedAmount","liquidityToken","JSBI","BigInt","raw","greaterThan","divide","multiply","toSignificant","isArchivedPid","multicall","abi","multi","getMulticallContract","web3","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","tryAggregate","requireSuccess","result","GAS_SETTINGS","default","DEFAULT_GAS_PRICE","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","amountInGwei","_web3","TESTNET_CHAIN_ID","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpStakingContract","lpStakingAbi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","MultiCallAbi","amount","pow","balance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_INFO_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","SPARKSWAP_API","API_ASSETS","API_SUMMARY","API_LIQUIDITY","API_LASTPRICE","BASE_BSC_SCAN_URLS","BetPosition","earningToken","CORE","harvest","sortOrder","isComingSoon","isDepositDisabled","isWithdrawDisabled","isAddTokenDisabled","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","field","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","findIndex","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","GRAPH_API_PREDICTION","marketResponse","where","first","skip","betId","EN","locale","language","code","languages","languageList","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","archivedHttpProvider","ARCHIVED_NODE","web3WithArchivedNodeProvider","transformProfileResponse","profileResponse","userId","isActive","profileApi","REACT_APP_API_PROFILE","getUsername","username","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","connectorLocalStorageKey","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","RedirectToFarms","location","to","GlobalStyle","createGlobalStyle","colors","label","icon","items","href","Menu","currentLanguage","setLanguage","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Farms","lazy","Pools","ComingSoon","NotFound","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","PANCAKE","MIXIE","variationId","video","webm","mp4","blur","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","setState","enLocale","currentLocale","fetchInitialLocales","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpStakingCalls","lpStaking","periodFinish","totalRewardRate","endDate","Date","setUTCSeconds","hasEnded","now","remainingDays","ceil","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl"],"mappings":"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","file":"static/js/main.669d3f93.chunk.js","sourcesContent":["import tokens from './tokens'\nimport { FarmConfig } from './types'\nimport { CAKE_INFO_URL, PANCAKE_ADD_LIQUIDITY_URL } from '../index'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  /* {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  */\n\n  /**\n   * INTERNAL STAKING POOLS\n   */\n  // OWN - BNB - OWN\n  {\n    pid: 251,\n    lpSymbol: 'SRKb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD581CdF609DD50fbaa25118583c6EE31b39662F9',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xCec445174D6f4e87d38d43d4b13E36dd55CC56A1',\n    },\n    token: tokens.srkb,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.srkb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'OWN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB31F2F7939108D9a518f6152689Dc1463091Ee7b',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x0Fe376032276Ad5fc55e782D6AB1f85Ce0669BFB',\n    },\n    token: tokens.own,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.own,\n  },\n\n  /**\n   * EXTERNAL STAKING POOLS\n   */\n  {\n    pid: 253,\n    lpSymbol: 'KGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB80cD24f54566FD482ffd928c13b4a618DC6d0c',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xF5927A81112ED7a5680DfB8D63E230b8c527CEA7',\n    },\n    token: tokens.kgo,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.srkb,\n  },\n  // KCLP - BUSD - SFUEL\n  {\n    pid: 254,\n    lpSymbol: 'KCLP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFDD633E7428cAEEc1712Ae9426BE0C29C9A5Cb49',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x3CE0Dc444298133bD1e16B520Dc1B862c374f281',\n    },\n    token: tokens.kclp,\n    pairToken: tokens.busd,\n    quoteToken: tokens.sfuel,\n    isPromoted: 1\n  },\n  // KCLP - BUSD - KCLP\n  {\n    pid: 255,\n    lpSymbol: 'KCLP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9f6b80e3867ab402081574e9e0a3be6fdf4ae95b',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x64f30722ce788c31dc28f09A6Ce3eA33f742B1D2',\n    },\n    token: tokens.kclp,\n    pairToken: tokens.busd,\n    quoteToken: tokens.kclp,\n    liquidityUrl: PANCAKE_ADD_LIQUIDITY_URL,\n    infoURL: CAKE_INFO_URL,\n  },\n  // TIPSY - BNB - KCLP\n  {\n    pid: 256,\n    lpSymbol: 'TIPSY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdF306B071D0DcA82580ff0B7834b5Fc962fb30F8',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xA24a42f5DCbe5AbaEf992818cC05e1Fd00a8A780',\n    },\n    token: tokens.tipsy,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.tipsy,\n    isPromoted: 1\n  },\n  // GZILA - BUSD - SFUEL\n  {\n    pid: 257,\n    lpSymbol: 'GZILA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8C7F831c673CDf29A9fb996593d8a7c71c028959',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x43BDf10036Dad8622569677217B40a0EdD2510C8',\n    },\n    token: tokens.gzila,\n    pairToken: tokens.busd,\n    quoteToken: tokens.sfuel,\n    isPromoted: 1\n  },\n  {\n    pid: 258,\n    lpSymbol: 'FLASH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34E5f2A523a4f192Cfa495Ba330EC2eC220c9e60',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x827a57f1BA89197a916916739fFE9aFBEe0D7670',\n    },\n    token: tokens.flash,\n    pairToken: tokens.busd,\n    quoteToken: tokens.flash,\n    isPromoted: 1\n  },\n  {\n    pid: 259,\n    lpSymbol: 'BHC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x19e3cd6418d81d69a71b3fc931387a2062c5a815',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xD314dbD9998401770943EcdBE97f78Ea2f0dEE62',\n    },\n    token: tokens.bhc,\n    pairToken: tokens.busd,\n    quoteToken: tokens.bhc,\n    isPromoted: 1\n  },\n  {\n    pid: 260,\n    lpSymbol: 'HPS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaaf827e2eaf72c62e77047458cbd40e7f30f1896',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x5a870495971ed55bd377fc390f46ab1b96bcd6b4',\n    },\n    token: tokens.hps,\n    pairToken: tokens.busd,\n    quoteToken: tokens.hps,\n    isPromoted: 1\n  },\n\n]\n\nexport default farms\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport web3NoAccount from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchCakeVaultFees,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  setBlock,\n} from './actions'\nimport { AchievementState, Farm, FarmsState, Pool, ProfileState, State, TeamsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\n// import { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { ConnectorId } from '@sparkpointio/sparkswap-uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorId) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem('1')\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { Ifo } from './types'\n\n// const cakeBnbLpToken: Token = {\n//   // symbol: farms[1].lpSymbol,\n//   // address: farms[1].lpAddresses,\n//   // decimals: 18,\n// }\n\nconst ifos: Ifo[] = [\n  // {\n  //   id: 'kalmar',\n  //   address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n  //   isActive: true,\n  //   name: 'Kalmar (KALM)',\n  //   poolBasic: {\n  //     saleAmount: '375,000 KALM',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '875,000 KALM',\n  //     raiseAmount: '$2,500,000',\n  //     cakeToBurn: '$1,250,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.kalm,\n  //   releaseBlockNumber: 7707736,\n  //   campaignId: '511110000',\n  //   articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n  //   tokenOfferingPrice: 2.0,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'hotcross',\n  //   address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n  //   isActive: false,\n  //   name: 'Hot Cross (HOTCROSS)',\n  //   poolBasic: {\n  //     saleAmount: '15,000,000 HOTCROSS',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '35,000,000 HOTCROSS',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hotcross,\n  //   releaseBlockNumber: 7477900,\n  //   campaignId: '511100000',\n  //   articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n  //   tokenOfferingPrice: 0.05,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'horizon',\n  //   address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n  //   isActive: false,\n  //   name: 'Horizon Protocol (HZN)',\n  //   poolBasic: {\n  //     saleAmount: '3,000,000 HZN',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '7,000,000 HZN',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hzn,\n  //   releaseBlockNumber: 6581111,\n  //   campaignId: '511090000',\n  //   articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n  //   tokenOfferingPrice: 0.25,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'belt',\n  //   address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n  //   isActive: false,\n  //   name: 'Belt (BELT)',\n  //   poolUnlimited: {\n  //     saleAmount: '150,000 BELT',\n  //     raiseAmount: '$3,000,000',\n  //     cakeToBurn: '$1,500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.belt,\n  //   releaseBlockNumber: 5493919,\n  //   campaignId: '511080000',\n  //   articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'watch',\n  //   address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n  //   isActive: false,\n  //   name: 'Yieldwatch (WATCH)',\n  //   poolUnlimited: {\n  //     saleAmount: '8,000,000 WATCH',\n  //     raiseAmount: '$800,000',\n  //     cakeToBurn: '$400,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.watch,\n  //   releaseBlockNumber: 5294924,\n  //   campaignId: '511070000',\n  //   articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'berry',\n  //   address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n  //   isActive: false,\n  //   name: 'Berry (BRY)',\n  //   poolUnlimited: {\n  //     saleAmount: '2,000,000 BRY',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.bry,\n  //   releaseBlockNumber: 4750968,\n  //   campaignId: '511060000',\n  //   articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'soteria',\n  //   address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n  //   isActive: false,\n  //   name: 'Soteria (wSOTE)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,500,000 wSOTE',\n  //     raiseAmount: '$525,000',\n  //     cakeToBurn: '$262,500',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.wsote,\n  //   releaseBlockNumber: 4086064,\n  //   campaignId: '511050000',\n  //   articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'helmet',\n  //   address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n  //   isActive: false,\n  //   name: 'Helmet.insure (Helmet)',\n  //   poolUnlimited: {\n  //     saleAmount: '10,000,000 Helmet',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.helmet,\n  //   releaseBlockNumber: 3771926,\n  //   campaignId: '511040000',\n  //   articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'tenet',\n  //   address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n  //   isActive: false,\n  //   name: 'Tenet (TEN)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,000,000 TEN',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ten,\n  //   releaseBlockNumber: 3483883,\n  //   campaignId: '511030000',\n  //   articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'ditto',\n  //   address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n  //   isActive: false,\n  //   name: 'Ditto (DITTO)',\n  //   poolUnlimited: {\n  //     saleAmount: '700,000 DITTO',\n  //     raiseAmount: '$630,000',\n  //     cakeToBurn: '$315,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ditto,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511020000',\n  //   articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'blink',\n  //   address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n  //   isActive: false,\n  //   name: 'BLINk (BLK)',\n  //   poolUnlimited: {\n  //     saleAmount: '100,000,000 BLINK',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.blink,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511010000',\n  //   articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@metagg/mgg-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: true, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","const tokens = {\n  sfuel: {\n    symbol: 'SFUEL',\n    address: {\n      56: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\n      97: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\n    },\n    decimals: 18,\n    projectLink: 'https://sparkpoint.io/',\n  },\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  srkb: {\n    symbol: 'SRKb',\n    address: {\n      56: '0xC3440c10c4F36f354eB591B19FafB4906d449B75',\n      97: '0xC3440c10c4F36f354eB591B19FafB4906d449B75',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n    projectLink: 'https://sparkpoint.io/',\n  },\n  ttkb: {\n    symbol: 'TTKb',\n    address: {\n      56: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\n      97: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\n    },\n    decimals: 18,\n    projectLink: 'https://sparkpoint.io/',\n  },\n  own: {\n    symbol: 'OWN',\n    address: {\n      56: '0x7665CB7b0d01Df1c9f9B9cC66019F00aBD6959bA',\n      97: '0x7665CB7b0d01Df1c9f9B9cC66019F00aBD6959bA',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n    projectLink: 'https://ownly.io/',\n  },\n  kclp: {\n    symbol: 'KCLP',\n    address: {\n      56: '0x47b8806C2891c4a92b5c590C32CFE1Eb617648EF',\n      97: '0x47b8806C2891c4a92b5c590C32CFE1Eb617648EF',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n    projectLink: 'https://kucoinlaunchpad.com/',\n  },\n  kroot: {\n    symbol: 'KROOT',\n    address: {\n      56: '0x0cD3a8Ce155A8d9DAAF19E5caa642e72a2a24Cd8',\n      97: '0x0cD3a8Ce155A8d9DAAF19E5caa642e72a2a24Cd8',\n    },\n    decimals: 18,\n  },\n  bglg: {\n    symbol: 'BGLG',\n    address: {\n      56: '0xEa01D8D9EaCCa9996Db6Bb3377c1Fe64308e7328',\n      97: '0xEa01D8D9EaCCa9996Db6Bb3377c1Fe64308e7328',\n    },\n    decimals: 18,\n  },\n  kgo: {\n    symbol: 'KGO',\n    address: {\n      56: '0x5d3AfBA1924aD748776E4Ca62213BF7acf39d773',\n      97: '0x5d3AfBA1924aD748776E4Ca62213BF7acf39d773',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  tipsy: {\n    symbol: 'TIPSY',\n    address: {\n      56: '0xf380334b9A181F54BF2f32FDD3e153D259472eBB',\n      97: '0xf380334b9A181F54BF2f32FDD3e153D259472eBB',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  gzila: {\n    symbol: 'GZILA',\n    address: {\n      56: '0x4178934c6E313a062c5addD66ab0D9B8d858347a',\n      97: '0x4178934c6E313a062c5addD66ab0D9B8d858347a',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  flash: {\n    symbol: 'FLASH',\n    address: {\n      56: '0x5f0366c9962193fa774cdce9602195593b49f23c',\n      97: '0x5f0366c9962193fa774cdce9602195593b49f23c',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  bhc: {\n    symbol: 'BHC',\n    address: {\n      56: '0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4',\n      97: '0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  hps: {\n    symbol: 'HPS',\n    address: {\n      56: '0xeda21b525ac789eab1a08ef2404dd8505ffb973d',\n      97: '0xeda21b525ac789eab1a08ef2404dd8505ffb973d',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n}\n\nexport default tokens\n\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'MGG',\n  description:\n    'Stake MGG and earn token rewards',\n  image: '%PUBLIC_URL%/MGG.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/farms':\n      return {\n        title: `${t('Liquidity')} | ${t('MGG')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('MGG')}`,\n      }\n    case '/gamefi':\n      return {\n        title: `${t('GameFi Vaults')} | ${t('MGG')}`,\n      }\n    case '/launchpad':\n      return {\n        title: `${t('IGO Launchpad')} | ${t('MGG')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Pools')} | ${t('MGG')} - ${t('Stake MGG and earn LP tokens!')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('MGG')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('MGG')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('MGG')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('MGG')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('MGG')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('MGG')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  // const cakePriceUsd = usePriceCakeBusd()\n  // const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n  //   ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n  //       minimumFractionDigits: 3,\n  //       maximumFractionDigits: 3,\n  //     })}`\n  //   : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  // const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property='og:title' content={title} />\n      <meta property='og:description' content={description} />\n      <meta property='og:image' content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, EPOCH_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  \n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get the FARM APR value in %\n * @param LPTokenPrice LP Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of LP Token in the pool\n * @param rewardForDuration Amount of rewards allocated to the farms\n * @param duration Duration of the farm in EPOCH\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getFarmV2Apr = (\n  LPTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  rewardRate: number\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(rewardRate).times(EPOCH_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(LPTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Spinner}  from '@metagg/mgg-uikit';\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner/>\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    console.log(process.env.REACT_APP_CHAIN_ID)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Testnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error('Can\\'t setup the BSC network on metamask because window.ethereum is undefined')\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n  iconExtension?: string | 'svg'\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  stakingAddresses: Address\n  token: Token\n  pairToken: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  liquidityUrl?: string\n  infoURL?: string\n  isPromoted?: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  isComingSoon?: boolean\n  enableEmergencyWithdraw?: boolean\n  isAddTokenDisabled?: boolean\n  isDepositDisabled?: boolean\n  isWithdrawDisabled?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","import { ChainId, JSBI, Pair, Token, TokenAmount } from '@pancakeswap-libs/sdk'\nimport { getAddress } from './addressHelpers'\n\nconst ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport const calculateUserRewardRate = (\n  {\n    lpAddresses,\n    totalDeposits,\n    quoteToken,\n    token,\n    rewardRate,\n    userData,\n    pairToken\n  }: any) => {\n  const stakingToken = new Token(\n    ChainId.MAINNET,\n    getAddress(lpAddresses),\n    18,\n  )\n  const rewardsToken = new Token(\n    ChainId.MAINNET, getAddress(quoteToken.address), quoteToken.decimals)\n  const rewardRateAmount = new TokenAmount(rewardsToken, rewardRate ?? 0)\n  const stakedAmount = new TokenAmount(stakingToken, userData.stakedBalance ?? 0)\n  const totalSupply = new TokenAmount(stakingToken, totalDeposits ?? 0)\n  const token0 = new Token(ChainId.MAINNET, getAddress(token.address), token.decimals)\n  const token1 = new Token(ChainId.MAINNET, getAddress(pairToken.address), pairToken.decimals)\n\n  const dummyPair = new Pair(new TokenAmount(token0, '0'), new TokenAmount(token1, '0'))\n\n  const totalStakedAmount = new TokenAmount(\n    dummyPair.liquidityToken, JSBI.BigInt(totalSupply.raw))\n\n  return new TokenAmount(\n    rewardsToken,\n    JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0))\n      ? JSBI.divide(JSBI.multiply(rewardRateAmount.raw, stakedAmount.raw), totalStakedAmount.raw)\n      : JSBI.BigInt(0),\n  )?.multiply(`${60 * 60 * 24 * 7}`)\n    ?.toSignificant(4)\n}\n\n// export const calcuLateApy = () => {\n//\n// }\n\nexport default isArchivedPid\n","import Web3 from 'web3'\nimport { Interface } from '@ethersproject/abi'\nimport web3NoAccount from 'utils/web3'\nimport { getMulticallContract } from 'utils/contractHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n    const multi = getMulticallContract(options.web3 || web3NoAccount)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}): Promise<any> => {\n  const multi = getMulticallContract(options.web3 || web3NoAccount)\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpStakingAbi from 'config/abi/lpStaking.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpStakingContract = (address: string, web3?: Web3) => {\n  return getContract(lpStakingAbi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\nexport const getMulticallContract = (web3?: Web3) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), web3)\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\n// export const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_URL = 'https://sparkswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://sparkswap.finance'\nexport const BASE_INFO_URL = 'https://sparkswap.info/#/token/'\nexport const CAKE_INFO_URL = 'https://pancakeswap.finance/info/pool/'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const PANCAKE_EXCHANGE_URL = 'https://pancakeswap.finance'\nexport const PANCAKE_ADD_LIQUIDITY_URL = `${PANCAKE_EXCHANGE_URL}/add`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\nexport const EPOCH_PER_YEAR = 31556926\nexport const SPARKSWAP_API = 'https://api.sparkswap.info/api/'\nexport const API_ASSETS = 'assets'\nexport const API_SUMMARY = 'summary'\nexport const API_LIQUIDITY = 'liquidity'\nexport const API_LASTPRICE = 'last_price'\n\n\n\nexport const BASE_BSC_SCAN_URLS = {\n  [MAINNET_CHAIN_ID]: 'https://bscscan.com',\n  [TESTNET_CHAIN_ID]: 'https://testnet.bscscan.com',\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  totalDeposits?: string\n  rewardRate?: SerializedBigNumber\n  totalRewardRate?: SerializedBigNumber\n  hasEnded?: boolean\n  remainingDays?: string\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  isPromoted?: number\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 3,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.srkb,\n    contractAddress: {\n      97: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\n      56: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2893518518518518518',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 4,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\n      56: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '135030864197530864',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 5,\n    stakingToken: tokens.kroot,\n    earningToken: tokens.srkb,\n    contractAddress: {\n      97: '0x8BCcC95ED233e8f89359c6c704deb0EbF4938Dfb',\n      56: '0x8BCcC95ED233e8f89359c6c704deb0EbF4938Dfb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2905478395061728395',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isAddTokenDisabled: true\n  },\n  {\n    sousId: 6,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.kroot,\n    contractAddress: {\n      97: '0xC9359C0929a00429EBfA6c373938bBdacB45F414',\n      56: '0xC9359C0929a00429EBfA6c373938bBdacB45F414',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3307098765432098765',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.bglg,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x6964ac226B29Aae4c674a7aeC3De67a5AB345d51',\n      56: '0x6964ac226B29Aae4c674a7aeC3De67a5AB345d51',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '200231481481481481',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isAddTokenDisabled: true\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.bglg,\n    contractAddress: {\n      97: '0xec93fe084d1b439fc7dcc6e67340ecaabe39c17f',\n      56: '0xec93fe084d1b439fc7dcc6e67340ecaabe39c17f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '530864197530864197',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.tipsy,\n    earningToken: tokens.tipsy,\n    contractAddress: {\n      97: '0x1DEC10EF7a9F8031715bC09DB5fa0bCC20E2780B',\n      56: '0x1DEC10EF7a9F8031715bC09DB5fa0bCC20E2780B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '307004629629629629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.tipsy,\n    contractAddress: {\n      97: '0x147c920e611d474E66151070C2EAdcCBAfBd6bc1',\n      56: '0x147c920e611d474E66151070C2EAdcCBAfBd6bc1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '307004629629629629',\n    sortOrder: 999,\n    isFinished: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 11,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.gzila,\n    contractAddress: {\n      97: '0xA0429473bDf24fdCDE211623C8A40Bfc8A2466C8',\n      56: '0xA0429473bDf24fdCDE211623C8A40Bfc8A2466C8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '590513888888888888',\n    sortOrder: 999,\n    isFinished: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 12,\n    stakingToken: tokens.gzila,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x8379b376b5B641245aF7417193d6cf495e2BbF99',\n      56: '0x8379b376b5B641245aF7417193d6cf495e2BbF99',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '74484953703703703',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 13,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.bhc,\n    contractAddress: {\n      97: '0x38f3C6F7D5aAC5D60c1C948f61231C6b2341d315',\n      56: '0x38f3C6F7D5aAC5D60c1C948f61231C6b2341d315',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '50154320987654',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 14,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.hps,\n    contractAddress: {\n      97: '0xa1a3f2c3d2b76926500b3f923ef997b64948a6ec',\n      56: '0xa1a3f2c3d2b76926500b3f923ef997b64948a6ec',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3062114197530864',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  // Dummy Contract #1\n  // {\n  //   sousId: 4,\n  //   stakingToken: tokens.sfuel,\n  //   earningToken: tokens.sfuel,\n  //   contractAddress: {\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f1a',\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca1a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '49603174603174603',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   isComingSoon: true,\n  // },\n  // Dummy Contract #2\n  // {\n  //   sousId: 5,\n  //   stakingToken: tokens.srkb,\n  //   earningToken: tokens.sfuel,\n  //   contractAddress: {\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f3a',\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca3a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '49603174603174603',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   isComingSoon: false,\n  // }\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'totalDeposit',\n      params: [],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(sousChefV2, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport web3NoAccount from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3NoAccount.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const calls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks'].map((method) => ({\n    address: getPredictionsAddress(),\n    name: method,\n  }))\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [isPaused], [bufferBlocks]] = await multicallv2(\n    predictionsAbi,\n    calls,\n  )\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toNumber(),\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\nexport const web3WithArchivedNodeProvider = new Web3(archivedHttpProvider)\n\nexport default web3NoAccount\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nexport function RedirectToFarms({ location }: RouteComponentProps){\n    return <Redirect to={{...location, pathname: '/farms'}} />\n}\n\nexport function RedirectToPools({ location }: RouteComponentProps){\n    return <Redirect to={{...location, pathname: '/liquidity'}} />\n}","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { SparkSwapTheme } from '@metagg/mgg-uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends SparkSwapTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@sparkpointio/sparkswap-uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: \"Staking\",\n    icon: \"\",\n    // href: \"/farms\"\n    items: [\n      {\n        label: 'Liquidity',\n        href: '/farms'\n      },\n      {\n        label: 'Pool-Based',\n        href: '/pools'\n      }\n    ]\n  },\n  {\n    label: \"GameFi Vault\",\n    icon: \"\",\n    href: \"/gamefi\",\n  },\n  {\n    label: \"IGO Launchpad\",\n    icon: \"\",\n    href: \"/launchpad\",\n  },\n  {\n    label: \"Earning Dashboard\",\n    icon: \"\",\n    href: \"/earning-dashboard\",\n  },\n  {\n    label: \"Bridge\",\n    icon: \"\",\n    href: \"https://app.srk.finance/#/bridge\",\n  },\n/*\n  {\n    label: \"Swap\",\n    icon: \"TradeIcon\",\n    href: \"https://sparkswap.finance/#/swap\",\n  },\n  {\n    label: \"Staking\",\n    icon: \"FarmIcon\",\n    items: [\n      {\n        label: \"Farms\",\n        href: \"/farms\",\n      },\n      {\n        label: \"Pools\",\n        href: \"/pools\",\n      },\n      {\n        label: \"Old Farms/Pools\",\n        href: \"https://app.srk.finance/#/stake\",\n      },\n    ],\n  },\n  {\n    label: \"Farm\",\n    icon: \"FarmIcon\",\n    href: \"https://app.srk.finance/#/stake\",\n  },\n  {\n    label: \"Pool\",\n    icon: \"PoolIcon\",\n    href: \"/pools\",\n  },\n  \n  {\n    label: \"Launch\",\n    icon: \"LaunchIcon\",\n    href: \"https://launch.sparkswap.finance/#/\",\n  },\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    href: \"https://sparkswap.info/#/home\",\n  },\n  {\n    label: \"Airdrop\",\n    icon: \"AirdropIcon\",\n    href: \"https://app.srk.finance/#/airdrop\",\n  },\n  {\n    label: \"Teams\",\n    icon: \"GroupsIcon\",\n    href: \"https://srk.finance/team\",\n  },\n  {\n    label: \"Help\",\n    icon: \"MoreIcon\",\n    href: \"https://medium.com/theecosystem/a-beginners-guide-to-sparkswap-79f92a2f7074\"\n  }\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    initialOpenState: true,\n    items: [\n      {\n        label: 'Exchange',\n        href: '/swap'\n      },\n      {\n        label: 'Liquidity',\n        href: '/pool'\n      }\n    ]\n  },\n \n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    items: [\n      {\n        label: \"Overview\",\n        href: \"https://coinmarketcap.com/currencies/sparkpoint/\",\n      },\n      {\n        label: \"Trade SRK\",\n        href: \"https://srk.sh/trade\",\n      },\n    ],\n  },\n  {\n    label: \"More\",\n    icon: \"MoreIcon\",\n    items: [\n      {\n        label: \"SparkDeFi\",\n        href: \"https://srk.finance/\",\n      },\n      {\n        label: \"SparkPoint\",\n        href: \"https://sparkpoint.io/\",\n      },\n      {\n        label: \"Github\",\n        href: \"https://github.com/sparkpointio\",\n      },\n      {\n        label: \"White Paper\",\n        href: \"https://github.com/sparkpointio/sparkdefi-whitepaper/blob/main/WHITEPAPER.md\",\n      },\n      {\n        label: \"Blog\",\n        href: \"https://medium.com/theecosystem\",\n      },\n    ],\n  },\n  */\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@metagg/mgg-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const { currentLanguage, setLanguage } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { lazy } from 'react'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS,  } from '@metagg/mgg-uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchProfile, usePollBlockNumber, usePollCoreFarmData } from 'state/hooks'\nimport { RedirectToFarms, RedirectToPools } from 'views/Farms/Redirects'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\n// import Pools from './views/Pools'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\n// const Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst ComingSoon = lazy(() => import('./views/ComingSoon'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <HashRouter>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path='/farms'>\n              <Farms />\n            </Route>\n            <Route path='/pools' exact>\n              <Pools />\n            </Route>\n            <Route path='/gamefi' exact>\n              <ComingSoon title=\"GameFi Vault\"/>\n            </Route>\n            <Route path='/launchpad' exact>\n              <ComingSoon title=\"IGO Launchpad\" />\n            </Route>\n            <Route path='/earning-dashboard' exact>\n              <ComingSoon title=\"Earning Dashboard\" />\n            </Route>\n            {/* <Route path='/liquidity'>\n              <Pools />\n            </Route> */}\n            {/* \n            \n            <Route path='/lottery'>\n              <Lottery />\n            </Route>\n            <Route path='/ifo'>\n              <Ifos />\n            </Route>\n            <Route path='/collectibles'>\n              <Collectibles />\n            </Route>\n            <Route exact path='/teams'>\n              <Teams />\n            </Route>\n            <Route path='/teams/:id'>\n              <Team />\n            </Route>\n            <Route path='/profile'>\n              <Profile />\n            </Route> */}\n            {/* Redirect */}\n            <Route path='/staking'>\n              <Redirect to='/farms' />\n            </Route>\n            <Route path='/' component={RedirectToFarms} />\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </HashRouter>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@metagg/mgg-uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  // {\n  //   pid: null,\n  //   lpSymbol: 'QSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n  //   },\n  //   token: tokens.qsd,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport { now } from 'lodash'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport lpStaking from 'config/abi/lpStaking.json'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  totalDeposits: SerializedBigNumber\n  rewardRate: SerializedBigNumber\n  totalRewardRate: SerializedBigNumber\n  hasEnded: boolean\n  remainingDays: string\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken, stakingAddresses } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n  const lpStakingCalls = [\n    // Total deposits in staking address\n    {\n      address: getAddress(stakingAddresses),\n      name: 'totalSupply',\n    },\n    // Total deposits in staking address\n    {\n      address: getAddress(stakingAddresses),\n      name: 'periodFinish',\n    },\n    {\n      address: getAddress(stakingAddresses),\n      name: 'rewardRate',\n    },\n  ]\n  const [totalSupply, periodFinish, rewardRate] =\n    await multicall(lpStaking, lpStakingCalls)\n\n  // Total Deposits in staking address\n  const totalDeposits = new BigNumber(totalSupply)\n\n  // total reward rate\n  const totalRewardRate = new BigNumber(rewardRate).times(60 * 60 * 24 * 7)\n\n  // console.log(totalRewardRate)\n\n  const endDate = (new Date(0)).setUTCSeconds(periodFinish)\n  const hasEnded = endDate < now()\n  const remainingDays = (Math.max(0, Math.ceil(((((endDate - now()) / 1000) / 60) / 60) / 24))).toString()\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    totalDeposits: totalDeposits.toJSON(),\n    'rewardRate': new BigNumber(rewardRate).toJSON(),\n    'totalRewardRate': totalRewardRate.toJSON(),\n    'hasEnded': hasEnded,\n    'remainingDays': remainingDays,\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\nimport lpStakingAbi from 'config/abi/lpStaking.json'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, getAddress(farm.stakingAddresses)] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: getAddress(farm.stakingAddresses),\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n\n  const rawStakedBalances = await multicall(lpStakingAbi, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: getAddress(farm.stakingAddresses),\n      name: 'earned',\n      params: [account],\n    }\n  })\n\n  const rawEarnings = await multicall(lpStakingAbi, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n"],"sourceRoot":""}